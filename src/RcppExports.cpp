// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// rcpp_ISO52010
NumericMatrix rcpp_ISO52010(double lat, double lng, double tz, double t_shift, NumericVector surfaceAzimuths, NumericVector surfaceTilts, NumericVector n_hour, NumericVector n_day, NumericVector G_dir, NumericVector G_dif, NumericVector albedo, int interp_perez);
RcppExport SEXP _solarCalcISO52010_rcpp_ISO52010(SEXP latSEXP, SEXP lngSEXP, SEXP tzSEXP, SEXP t_shiftSEXP, SEXP surfaceAzimuthsSEXP, SEXP surfaceTiltsSEXP, SEXP n_hourSEXP, SEXP n_daySEXP, SEXP G_dirSEXP, SEXP G_difSEXP, SEXP albedoSEXP, SEXP interp_perezSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type lat(latSEXP);
    Rcpp::traits::input_parameter< double >::type lng(lngSEXP);
    Rcpp::traits::input_parameter< double >::type tz(tzSEXP);
    Rcpp::traits::input_parameter< double >::type t_shift(t_shiftSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type surfaceAzimuths(surfaceAzimuthsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type surfaceTilts(surfaceTiltsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type n_hour(n_hourSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type n_day(n_daySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type G_dir(G_dirSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type G_dif(G_difSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type albedo(albedoSEXP);
    Rcpp::traits::input_parameter< int >::type interp_perez(interp_perezSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_ISO52010(lat, lng, tz, t_shift, surfaceAzimuths, surfaceTilts, n_hour, n_day, G_dir, G_dif, albedo, interp_perez));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_ISO52010_angles
NumericMatrix rcpp_ISO52010_angles(double lat, double lng, double tz, double t_shift, NumericVector n_hour, NumericVector n_day);
RcppExport SEXP _solarCalcISO52010_rcpp_ISO52010_angles(SEXP latSEXP, SEXP lngSEXP, SEXP tzSEXP, SEXP t_shiftSEXP, SEXP n_hourSEXP, SEXP n_daySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type lat(latSEXP);
    Rcpp::traits::input_parameter< double >::type lng(lngSEXP);
    Rcpp::traits::input_parameter< double >::type tz(tzSEXP);
    Rcpp::traits::input_parameter< double >::type t_shift(t_shiftSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type n_hour(n_hourSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type n_day(n_daySEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_ISO52010_angles(lat, lng, tz, t_shift, n_hour, n_day));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_solarCalcISO52010_rcpp_ISO52010", (DL_FUNC) &_solarCalcISO52010_rcpp_ISO52010, 12},
    {"_solarCalcISO52010_rcpp_ISO52010_angles", (DL_FUNC) &_solarCalcISO52010_rcpp_ISO52010_angles, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_solarCalcISO52010(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
